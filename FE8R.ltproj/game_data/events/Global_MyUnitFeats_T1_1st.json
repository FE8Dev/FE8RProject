[
    {
        "name": "MyUnitFeats_T1_1st",
        "trigger": "unit_level_up",
        "level_nid": null,
        "condition": "False",
        "commands": [],
        "only_once": false,
        "priority": 30,
        "_source": [
            "if;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier != 0",
            "    ",
            "    if;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 1 and not has_skill(unit, 'MyUnit_T1_1st')",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T2\" not in s.nid and \"_T3\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        give_skill;{unit};MyUnit_T1_1st;no_banner",
            "        ",
            "        ",
            "    elif;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 1 and has_skill(unit, 'MyUnit_T1_1st') and not has_skill(unit, 'MyUnit_T1_2nd')",
            "        ",
            "        ",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T2\" not in s.nid and \"_T3\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        give_skill;{unit};MyUnit_T1_2nd;no_banner",
            "        ",
            "        ",
            "        ",
            "    elif;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 2 and has_skill(unit, 'MyUnit_T1_2nd') and not has_skill(unit, 'MyUnit_T2_1st')",
            "        ",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T1\" not in s.nid and \"_T3\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        ",
            "        give_skill;{unit};MyUnit_T2_1st;no_banner",
            "        ",
            "        ",
            "        ",
            "    elif;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 2 and not has_skill(unit, 'MyUnit_T1_1st') ",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T2\" not in s.nid and \"_T3\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        give_skill;{unit};MyUnit_T1_1st;no_banner",
            "        ",
            "        ",
            "        ",
            "    elif;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 2 and has_skill(unit, 'MyUnit_T1_1st') and not has_skill(unit, 'MyUnit_T1_2nd')",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T2\" not in s.nid and \"_T3\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        give_skill;{unit};MyUnit_T1_2nd;no_banner",
            "        ",
            "        ",
            "        ",
            "        ",
            "    elif;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 2 and has_skill(unit, 'MyUnit_T2_1st') and not has_skill(unit, 'MyUnit_T2_2nd')",
            "        ",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T1\" not in s.nid and \"_T3\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        ",
            "        give_skill;{unit};MyUnit_T2_2nd;no_banner",
            "        ",
            "        ",
            "        ",
            "        ",
            "        ",
            "    elif;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 3 and has_skill(unit, 'MyUnit_T2_2nd') and not has_skill(unit, 'MyUnit_T3_1st')",
            "        ",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T1\" not in s.nid and \"_T2\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        ",
            "        give_skill;{unit};MyUnit_T3_1st;no_banner",
            "       ",
            "        ",
            "        ",
            "        ",
            "    elif;DB.classes.get('{e:game.get_unit('{unit}').klass}').tier == 3 and has_skill(unit, 'MyUnit_T3_1st') and not has_skill(unit, 'MyUnit_T3_2nd')",
            "        ",
            "        lvar;feats;[]",
            "        for;feat_skills;range(10)",
            "            lvar;feats;{v:feats} + [game.get_random_choice([s.nid for s in DB.skills if s.components.get('copysafe') and s.nid not in [x.nid for x in unit.skills] and s.nid not in v(\"feats\") and \"_T1\" not in s.nid and \"_T2\" not in s.nid])]",
            "        endf",
            "        ",
            "        lvar;Skill1;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][0]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 0 else \"\"",
            "        lvar;Skill2;DB.skills.get([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid][1]).name if len([skill_nid for lvl, skill_nid in DB.classes.get(unit.klass).learned_skills if \"_hide\" not in skill_nid]) > 1 else \"\"",
            "        ",
            "        textbox;ClassSkillsText;Class skills: {v:Skill1}, {v:Skill2};top;;1;;;;;",
            "        ",
            "        choice;skill_gain;Choose a Feat for {e:unit.name};{v:feats};;;bottom;;;type_skill;5,2;expression",
            "        remove_table;ClassSkillsText",
            "        give_skill;{e:unit.nid};{v:skill_gain}",
            "        for;skills;[s for s in get_skill(unit,'{v:skill_gain}').copysafe.value]",
            "            give_skill;{unit};{skills};no_banner",
            "        endf",
            "        ",
            "        give_skill;{unit};MyUnit_T3_2nd;no_banner",
            "        ",
            "        ",
            "    else",
            "    end",
            "    ",
            "    ",
            "else",
            "end"
        ],
        "nid": "Global MyUnitFeats_T1_1st"
    }
]